/**
* simplemonitor API generated from simplemonitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Simplemonitor.h"
#include "Simplemonitor_dp.h"

Simplemonitor::Simplemonitor(const std::string name, const SimplemonitorJsonObject &conf)
  : TransparentCube(conf.getBase(), { simplemonitor_code }, {}),
    SimplemonitorBase(name) {
  logger()->info("Creating Simplemonitor instance");
    setIngressAction(conf.getIngressAction());
    setEgressAction(conf.getEgressAction());
}


Simplemonitor::~Simplemonitor() {
  logger()->info("Destroying Simplemonitor instance");
}

void Simplemonitor::packet_in(polycube::service::Sense sense,
    polycube::service::PacketInMetadata &md,
    const std::vector<uint8_t> &packet) {
    logger()->debug("Packet received");
}

SimplemonitorIngressActionEnum Simplemonitor::getIngressAction() {
  throw std::runtime_error("Simplemonitor::getIngressAction: Method not implemented");
}

void Simplemonitor::setIngressAction(const SimplemonitorIngressActionEnum &value) {
  throw std::runtime_error("Simplemonitor::setIngressAction: Method not implemented");
}

SimplemonitorEgressActionEnum Simplemonitor::getEgressAction() {
  throw std::runtime_error("Simplemonitor::getEgressAction: Method not implemented");
}

void Simplemonitor::setEgressAction(const SimplemonitorEgressActionEnum &value) {
  throw std::runtime_error("Simplemonitor::setEgressAction: Method not implemented");
}


